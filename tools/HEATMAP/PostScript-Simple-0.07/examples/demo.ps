%!PS-Adobe-3.0
%%Title: (demo.ps)
%%LanguageLevel: 1
%%Creator: PostScript::Simple perl module version 0.06
%%CreationDate: Thu Jun 24 01:52:29 2004
%%For: comcn
%%DocumentMedia: A4 595.27559 841.88976 0 ( ) ( )
%%Orientation: Portrait
%%Pages: 2
%%EndComments
%%BeginProlog
/ll 1 def systemdict /languagelevel known {
/ll languagelevel def } if
%%BeginResource: PostScript::Simple
/ux {72 mul 25.4 div} def
/uy {72 mul 25.4 div} def
/u {72 mul 25.4 div} def
/box {
  newpath 3 copy pop exch 4 copy pop pop
  8 copy pop pop pop pop exch pop exch
  3 copy pop pop exch moveto lineto
  lineto lineto pop pop pop pop closepath
} bind def
/BeginEPSF { /b4_Inc_state save def /dict_count countdictstack def
/op_count count 1 sub def userdict begin /showpage { } def 0 setgray
0 setlinecap 1 setlinewidth 0 setlinejoin 10 setmiterlimit [ ]
0 setdash newpath /languagelevel where { pop languagelevel 1 ne {
false setstrokeadjust false setoverprint } if } if } bind def
/EndEPSF { count op_count sub {pop} repeat countdictstack dict_count
sub {end} repeat b4_Inc_state restore } bind def
%%EndResource
%%EndProlog
%%BeginSetup
ll 2 ge { << /PageSize [ 595.27559 841.88976 ] /ImagingBBox null >> setpagedevice } if
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
/pagelevel save def
%%EndPageSetup
10 ux 10 uy 200 ux 287 uy box stroke
newpath
10 ux 277 uy moveto
200 ux 277 uy lineto stroke
/Times-Roman findfont 14 scalefont setfont
newpath
15 ux 280 uy moveto
(PostScript::Simple example file: EPS import functions \(from a file\))   show stroke 
/Courier findfont 10 scalefont setfont
0.8 0 0 setrgbcolor
20 ux 210 uy 45 ux 260 uy box stroke
BeginEPSF
20 ux 210 uy translate
1 ux 1 uy scale
0.25 0.25 scale
0 0 translate
newpath 0 0 moveto
100 0 lineto 100 100 lineto
0 100 lineto closepath clip
%%BeginDocument: demo-square.eps
%!PS-Adobe-3.0 EPSF-1.2
%%Title: (demo-square.eps)
%%LanguageLevel: 1
%%Creator: PostScript::Simple perl module version 0.06
%%CreationDate: Thu Jun 24 01:52:29 2004
%%For: comcn
%%Orientation: Portrait
%%BoundingBox: 0 0 100 100
%%EndComments
%%BeginProlog
/ll 1 def systemdict /languagelevel known {
/ll languagelevel def } if
%%BeginResource: PostScript::Simple
/ux {} def
/uy {} def
/u {} def
/box {
  newpath 3 copy pop exch 4 copy pop pop
  8 copy pop pop pop pop exch pop exch
  3 copy pop pop exch moveto lineto
  lineto lineto pop pop pop pop closepath
} bind def
%%EndResource
%%EndProlog
5 u setlinewidth
10 ux 10 uy 90 ux 90 uy box stroke
0.4 setlinewidth
newpath
0 ux 50 uy moveto
100 ux 50 uy lineto stroke
newpath
50 ux 0 uy moveto
50 ux 100 uy lineto stroke
newpath
0 ux 40 uy moveto
0 ux 60 uy lineto stroke
newpath
100 ux 40 uy moveto
100 ux 60 uy lineto stroke
newpath
40 ux 0 uy moveto
60 ux 0 uy lineto stroke
newpath
40 ux 100 uy moveto
60 ux 100 uy lineto stroke
%%EOF
%%EndDocument
EndEPSF
0.5 0 0 setrgbcolor
newpath
14 ux 270 uy moveto
($ps->importepsfile\("demo-square.eps", 20, 210, 45, 260\);)  -90 rotate   show stroke  90 rotate 
0 0.8 0 setrgbcolor
80 ux 210 uy 105 ux 260 uy box stroke
BeginEPSF
80 ux 210 uy translate
1 ux 1 uy scale
0.25 0.5 scale
0 0 translate
newpath 0 0 moveto
100 0 lineto 100 100 lineto
0 100 lineto closepath clip
%%BeginDocument: demo-square.eps
%!PS-Adobe-3.0 EPSF-1.2
%%Title: (demo-square.eps)
%%LanguageLevel: 1
%%Creator: PostScript::Simple perl module version 0.06
%%CreationDate: Thu Jun 24 01:52:29 2004
%%For: comcn
%%Orientation: Portrait
%%BoundingBox: 0 0 100 100
%%EndComments
%%BeginProlog
/ll 1 def systemdict /languagelevel known {
/ll languagelevel def } if
%%BeginResource: PostScript::Simple
/ux {} def
/uy {} def
/u {} def
/box {
  newpath 3 copy pop exch 4 copy pop pop
  8 copy pop pop pop pop exch pop exch
  3 copy pop pop exch moveto lineto
  lineto lineto pop pop pop pop closepath
} bind def
%%EndResource
%%EndProlog
5 u setlinewidth
10 ux 10 uy 90 ux 90 uy box stroke
0.4 setlinewidth
newpath
0 ux 50 uy moveto
100 ux 50 uy lineto stroke
newpath
50 ux 0 uy moveto
50 ux 100 uy lineto stroke
newpath
0 ux 40 uy moveto
0 ux 60 uy lineto stroke
newpath
100 ux 40 uy moveto
100 ux 60 uy lineto stroke
newpath
40 ux 0 uy moveto
60 ux 0 uy lineto stroke
newpath
40 ux 100 uy moveto
60 ux 100 uy lineto stroke
%%EOF
%%EndDocument
EndEPSF
0 0.5 0 setrgbcolor
newpath
74 ux 270 uy moveto
($ps->importepsfile\({stretch => 1}, "demo-square.eps", 80, 210, 105, 260\);)  -90 rotate   show stroke  90 rotate 
0 0 0.8 setrgbcolor
140 ux 210 uy 165 ux 260 uy box stroke
BeginEPSF
140 ux 210 uy translate
1 ux 1 uy scale
0.5 0.5 scale
0 0 translate
newpath 0 0 moveto
100 0 lineto 100 100 lineto
0 100 lineto closepath clip
%%BeginDocument: demo-square.eps
%!PS-Adobe-3.0 EPSF-1.2
%%Title: (demo-square.eps)
%%LanguageLevel: 1
%%Creator: PostScript::Simple perl module version 0.06
%%CreationDate: Thu Jun 24 01:52:29 2004
%%For: comcn
%%Orientation: Portrait
%%BoundingBox: 0 0 100 100
%%EndComments
%%BeginProlog
/ll 1 def systemdict /languagelevel known {
/ll languagelevel def } if
%%BeginResource: PostScript::Simple
/ux {} def
/uy {} def
/u {} def
/box {
  newpath 3 copy pop exch 4 copy pop pop
  8 copy pop pop pop pop exch pop exch
  3 copy pop pop exch moveto lineto
  lineto lineto pop pop pop pop closepath
} bind def
%%EndResource
%%EndProlog
5 u setlinewidth
10 ux 10 uy 90 ux 90 uy box stroke
0.4 setlinewidth
newpath
0 ux 50 uy moveto
100 ux 50 uy lineto stroke
newpath
50 ux 0 uy moveto
50 ux 100 uy lineto stroke
newpath
0 ux 40 uy moveto
0 ux 60 uy lineto stroke
newpath
100 ux 40 uy moveto
100 ux 60 uy lineto stroke
newpath
40 ux 0 uy moveto
60 ux 0 uy lineto stroke
newpath
40 ux 100 uy moveto
60 ux 100 uy lineto stroke
%%EOF
%%EndDocument
EndEPSF
0 0 0.5 setrgbcolor
newpath
134 ux 270 uy moveto
($ps->importepsfile\({overlap => 1}, "demo-square.eps", 140, 210, 165, 260\);)  -90 rotate   show stroke  90 rotate 
0.784313725490196 0 0.784313725490196 setrgbcolor
30 ux 30 uy 90 ux 90 uy box stroke
BeginEPSF
30 ux 30 uy translate
1 ux 1 uy scale
0.6 0.6 scale
50 50 translate
20 rotate
-50 -50 translate
newpath 0 0 moveto
100 0 lineto 100 100 lineto
0 100 lineto closepath clip
%%BeginDocument: demo-square.eps
%!PS-Adobe-3.0 EPSF-1.2
%%Title: (demo-square.eps)
%%LanguageLevel: 1
%%Creator: PostScript::Simple perl module version 0.06
%%CreationDate: Thu Jun 24 01:52:29 2004
%%For: comcn
%%Orientation: Portrait
%%BoundingBox: 0 0 100 100
%%EndComments
%%BeginProlog
/ll 1 def systemdict /languagelevel known {
/ll languagelevel def } if
%%BeginResource: PostScript::Simple
/ux {} def
/uy {} def
/u {} def
/box {
  newpath 3 copy pop exch 4 copy pop pop
  8 copy pop pop pop pop exch pop exch
  3 copy pop pop exch moveto lineto
  lineto lineto pop pop pop pop closepath
} bind def
%%EndResource
%%EndProlog
5 u setlinewidth
10 ux 10 uy 90 ux 90 uy box stroke
0.4 setlinewidth
newpath
0 ux 50 uy moveto
100 ux 50 uy lineto stroke
newpath
50 ux 0 uy moveto
50 ux 100 uy lineto stroke
newpath
0 ux 40 uy moveto
0 ux 60 uy lineto stroke
newpath
100 ux 40 uy moveto
100 ux 60 uy lineto stroke
newpath
40 ux 0 uy moveto
60 ux 0 uy lineto stroke
newpath
40 ux 100 uy moveto
60 ux 100 uy lineto stroke
%%EOF
%%EndDocument
EndEPSF
/Courier findfont 10 scalefont setfont
newpath
100 ux 85 uy moveto
($eps = new PostScript::Simple::EPS)   show stroke 
newpath
110 ux 80 uy moveto
(\(file => "demo-square.eps"\);)   show stroke 
newpath
100 ux 75 uy moveto
($eps->scale\(60/100\);)   show stroke 
newpath
100 ux 70 uy moveto
($eps->translate\(50, 50\);)   show stroke 
newpath
100 ux 65 uy moveto
($eps->rotate\(20\);)   show stroke 
newpath
100 ux 60 uy moveto
($eps->translate\(-50, -50\);)   show stroke 
newpath
100 ux 55 uy moveto
($ps->importeps\($eps, 30, 30\);)   show stroke 
%%PageTrailer
pagelevel restore
showpage
%%Page: 2 2
%%BeginPageSetup
/pagelevel save def
%%EndPageSetup
10 ux 10 uy 200 ux 287 uy box stroke
newpath
10 ux 277 uy moveto
200 ux 277 uy lineto stroke
/Times-Roman findfont 14 scalefont setfont
newpath
15 ux 280 uy moveto
(PostScript::Simple example file: EPS import functions \(using internal EPS object\))   show stroke 
/Courier findfont 10 scalefont setfont
0.8 0 0 setrgbcolor
20 ux 210 uy 45 ux 260 uy box stroke
BeginEPSF
20 ux 210 uy translate
1 ux 1 uy scale
0.25 0.25 scale
newpath 0 0 moveto
100 0 lineto 100 100 lineto
0 100 lineto closepath clip
%!PS-Adobe-3.0 EPSF-1.2
%%Title: (PostScript::Simple generated page)
%%LanguageLevel: 1
%%Creator: PostScript::Simple perl module version 0.06
%%CreationDate: Thu Jun 24 01:52:29 2004
%%For: comcn
%%Orientation: Portrait
%%BoundingBox: 0 0 100 100
%%EndComments
%%BeginProlog
/ll 1 def systemdict /languagelevel known {
/ll languagelevel def } if
%%BeginResource: PostScript::Simple
/ux {} def
/uy {} def
/u {} def
/box {
  newpath 3 copy pop exch 4 copy pop pop
  8 copy pop pop pop pop exch pop exch
  3 copy pop pop exch moveto lineto
  lineto lineto pop pop pop pop closepath
} bind def
%%EndResource
%%EndProlog
5 u setlinewidth
10 ux 10 uy 90 ux 90 uy box stroke
0.4 setlinewidth
newpath
0 ux 50 uy moveto
100 ux 50 uy lineto stroke
newpath
50 ux 0 uy moveto
50 ux 100 uy lineto stroke
newpath
0 ux 40 uy moveto
0 ux 60 uy lineto stroke
newpath
100 ux 40 uy moveto
100 ux 60 uy lineto stroke
newpath
40 ux 0 uy moveto
60 ux 0 uy lineto stroke
newpath
40 ux 100 uy moveto
60 ux 100 uy lineto stroke
%%EOF
EndEPSF
0.5 0 0 setrgbcolor
newpath
30 ux 205 uy moveto
($directeps->reset\(\);)  -60 rotate   show stroke  60 rotate 
newpath
25 ux 205 uy moveto
($directeps->scale\(25/$directeps->width\(\)\);)  -60 rotate   show stroke  60 rotate 
newpath
20 ux 205 uy moveto
($ps->importeps\($directeps, 20, 210\);)  -60 rotate   show stroke  60 rotate 
0 0.8 0 setrgbcolor
80 ux 210 uy 105 ux 260 uy box stroke
BeginEPSF
80 ux 210 uy translate
1 ux 1 uy scale
0.25 0.5 scale
newpath 0 0 moveto
100 0 lineto 100 100 lineto
0 100 lineto closepath clip
%!PS-Adobe-3.0 EPSF-1.2
%%Title: (PostScript::Simple generated page)
%%LanguageLevel: 1
%%Creator: PostScript::Simple perl module version 0.06
%%CreationDate: Thu Jun 24 01:52:29 2004
%%For: comcn
%%Orientation: Portrait
%%BoundingBox: 0 0 100 100
%%EndComments
%%BeginProlog
/ll 1 def systemdict /languagelevel known {
/ll languagelevel def } if
%%BeginResource: PostScript::Simple
/ux {} def
/uy {} def
/u {} def
/box {
  newpath 3 copy pop exch 4 copy pop pop
  8 copy pop pop pop pop exch pop exch
  3 copy pop pop exch moveto lineto
  lineto lineto pop pop pop pop closepath
} bind def
%%EndResource
%%EndProlog
5 u setlinewidth
10 ux 10 uy 90 ux 90 uy box stroke
0.4 setlinewidth
newpath
0 ux 50 uy moveto
100 ux 50 uy lineto stroke
newpath
50 ux 0 uy moveto
50 ux 100 uy lineto stroke
newpath
0 ux 40 uy moveto
0 ux 60 uy lineto stroke
newpath
100 ux 40 uy moveto
100 ux 60 uy lineto stroke
newpath
40 ux 0 uy moveto
60 ux 0 uy lineto stroke
newpath
40 ux 100 uy moveto
60 ux 100 uy lineto stroke
%%EOF
EndEPSF
0 0.5 0 setrgbcolor
newpath
90 ux 205 uy moveto
($directeps->reset\(\);)  -60 rotate   show stroke  60 rotate 
newpath
85 ux 205 uy moveto
($directeps->scale\(25/$directeps->width\(\), 50/$directeps->height\(\)\);)  -60 rotate   show stroke  60 rotate 
newpath
80 ux 205 uy moveto
($ps->importeps\($directeps, 80, 210\);)  -60 rotate   show stroke  60 rotate 
0 0 0.8 setrgbcolor
140 ux 210 uy 165 ux 260 uy box stroke
BeginEPSF
140 ux 210 uy translate
1 ux 1 uy scale
0.5 0.5 scale
newpath 0 0 moveto
100 0 lineto 100 100 lineto
0 100 lineto closepath clip
%!PS-Adobe-3.0 EPSF-1.2
%%Title: (PostScript::Simple generated page)
%%LanguageLevel: 1
%%Creator: PostScript::Simple perl module version 0.06
%%CreationDate: Thu Jun 24 01:52:29 2004
%%For: comcn
%%Orientation: Portrait
%%BoundingBox: 0 0 100 100
%%EndComments
%%BeginProlog
/ll 1 def systemdict /languagelevel known {
/ll languagelevel def } if
%%BeginResource: PostScript::Simple
/ux {} def
/uy {} def
/u {} def
/box {
  newpath 3 copy pop exch 4 copy pop pop
  8 copy pop pop pop pop exch pop exch
  3 copy pop pop exch moveto lineto
  lineto lineto pop pop pop pop closepath
} bind def
%%EndResource
%%EndProlog
5 u setlinewidth
10 ux 10 uy 90 ux 90 uy box stroke
0.4 setlinewidth
newpath
0 ux 50 uy moveto
100 ux 50 uy lineto stroke
newpath
50 ux 0 uy moveto
50 ux 100 uy lineto stroke
newpath
0 ux 40 uy moveto
0 ux 60 uy lineto stroke
newpath
100 ux 40 uy moveto
100 ux 60 uy lineto stroke
newpath
40 ux 0 uy moveto
60 ux 0 uy lineto stroke
newpath
40 ux 100 uy moveto
60 ux 100 uy lineto stroke
%%EOF
EndEPSF
0 0 0.5 setrgbcolor
newpath
150 ux 205 uy moveto
($directeps->reset\(\);)  -60 rotate   show stroke  60 rotate 
newpath
145 ux 205 uy moveto
($directeps->scale\(50/$directeps->height\(\)\);)  -60 rotate   show stroke  60 rotate 
newpath
140 ux 205 uy moveto
($ps->importeps\($directeps, 140, 210\);)  -60 rotate   show stroke  60 rotate 
0.784313725490196 0 0.784313725490196 setrgbcolor
30 ux 30 uy 90 ux 90 uy box stroke
BeginEPSF
30 ux 30 uy translate
1 ux 1 uy scale
0.6 0.6 scale
newpath 0 0 moveto
100 0 lineto 100 100 lineto
0 100 lineto closepath clip
%!PS-Adobe-3.0 EPSF-1.2
%%Title: (PostScript::Simple generated page)
%%LanguageLevel: 1
%%Creator: PostScript::Simple perl module version 0.06
%%CreationDate: Thu Jun 24 01:52:29 2004
%%For: comcn
%%Orientation: Portrait
%%BoundingBox: 0 0 100 100
%%EndComments
%%BeginProlog
/ll 1 def systemdict /languagelevel known {
/ll languagelevel def } if
%%BeginResource: PostScript::Simple
/ux {} def
/uy {} def
/u {} def
/STARTDIFFENC { mark } bind def
/ENDDIFFENC { 

% /NewEnc BaseEnc STARTDIFFENC number or glyphname ... ENDDIFFENC -
	counttomark 2 add -1 roll 256 array copy
	/TempEncode exch def
	
	% pointer for sequential encodings
	/EncodePointer 0 def
	{
		% Get the bottom object
		counttomark -1 roll
		% Is it a mark?
		dup type dup /marktype eq {
			% End of encoding
			pop pop exit
		} {
			/nametype eq {
			% Insert the name at EncodePointer 

			% and increment the pointer.
			TempEncode EncodePointer 3 -1 roll put
			/EncodePointer EncodePointer 1 add def
			} {
			% Set the EncodePointer to the number
			/EncodePointer exch def
			} ifelse
		} ifelse
	} loop	

	TempEncode def
} bind def

% Define ISO Latin1 encoding if it doesnt exist
/ISOLatin1Encoding where {
%	(ISOLatin1 exists!) =
	pop
} {
	(ISOLatin1 does not exist, creating...) =
	/ISOLatin1Encoding StandardEncoding STARTDIFFENC
		144 /dotlessi /grave /acute /circumflex /tilde 
		/macron /breve /dotaccent /dieresis /.notdef /ring 
		/cedilla /.notdef /hungarumlaut /ogonek /caron /space 
		/exclamdown /cent /sterling /currency /yen /brokenbar 
		/section /dieresis /copyright /ordfeminine 
		/guillemotleft /logicalnot /hyphen /registered 
		/macron /degree /plusminus /twosuperior 
		/threesuperior /acute /mu /paragraph /periodcentered 
		/cedilla /onesuperior /ordmasculine /guillemotright 
		/onequarter /onehalf /threequarters /questiondown 
		/Agrave /Aacute /Acircumflex /Atilde /Adieresis 
		/Aring /AE /Ccedilla /Egrave /Eacute /Ecircumflex 
		/Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
		/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde 
		/Odieresis /multiply /Oslash /Ugrave /Uacute 
		/Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
		/agrave /aacute /acircumflex /atilde /adieresis 
		/aring /ae /ccedilla /egrave /eacute /ecircumflex 
		/edieresis /igrave /iacute /icircumflex /idieresis 
		/eth /ntilde /ograve /oacute /ocircumflex /otilde 
		/odieresis /divide /oslash /ugrave /uacute 
		/ucircumflex /udieresis /yacute /thorn /ydieresis
	ENDDIFFENC
} ifelse

% Name: Re-encode Font
% Description: Creates a new font using the named encoding. 

/REENCODEFONT { % /Newfont NewEncoding /Oldfont
	findfont dup length 4 add dict
	begin
		{ % forall
			1 index /FID ne 
			2 index /UniqueID ne and
			2 index /XUID ne and
			{ def } { pop pop } ifelse
		} forall
		/Encoding exch def
		% defs for DPS
		/BitmapWidths false def
		/ExactSize 0 def
		/InBetweenSize 0 def
		/TransformedChar 0 def
		currentdict
	end
	definefont pop
} bind def

% Reencode the std fonts: 
/Courier-iso ISOLatin1Encoding /Courier REENCODEFONT
/Courier-Bold-iso ISOLatin1Encoding /Courier-Bold REENCODEFONT
/Courier-BoldOblique-iso ISOLatin1Encoding /Courier-BoldOblique REENCODEFONT
/Courier-Oblique-iso ISOLatin1Encoding /Courier-Oblique REENCODEFONT
/Helvetica-iso ISOLatin1Encoding /Helvetica REENCODEFONT
/Helvetica-Bold-iso ISOLatin1Encoding /Helvetica-Bold REENCODEFONT
/Helvetica-BoldOblique-iso ISOLatin1Encoding /Helvetica-BoldOblique REENCODEFONT
/Helvetica-Oblique-iso ISOLatin1Encoding /Helvetica-Oblique REENCODEFONT
/Times-Roman-iso ISOLatin1Encoding /Times-Roman REENCODEFONT
/Times-Bold-iso ISOLatin1Encoding /Times-Bold REENCODEFONT
/Times-BoldItalic-iso ISOLatin1Encoding /Times-BoldItalic REENCODEFONT
/Times-Italic-iso ISOLatin1Encoding /Times-Italic REENCODEFONT
/Symbol-iso ISOLatin1Encoding /Symbol REENCODEFONT
/BeginEPSF { /b4_Inc_state save def /dict_count countdictstack def
/op_count count 1 sub def userdict begin /showpage { } def 0 setgray
0 setlinecap 1 setlinewidth 0 setlinejoin 10 setmiterlimit [ ]
0 setdash newpath /languagelevel where { pop languagelevel 1 ne {
false setstrokeadjust false setoverprint } if } if } bind def
/EndEPSF { count op_count sub {pop} repeat countdictstack dict_count
sub {end} repeat b4_Inc_state restore } bind def
%%EndResource
%%EndProlog
BeginEPSF
0 ux 0 uy translate
1 ux 1 uy scale
50 50 translate
20 rotate
-50 -50 translate
newpath 0 0 moveto
100 0 lineto 100 100 lineto
0 100 lineto closepath clip
%!PS-Adobe-3.0 EPSF-1.2
%%Title: (PostScript::Simple generated page)
%%LanguageLevel: 1
%%Creator: PostScript::Simple perl module version 0.06
%%CreationDate: Thu Jun 24 01:52:29 2004
%%For: comcn
%%Orientation: Portrait
%%BoundingBox: 0 0 100 100
%%EndComments
%%BeginProlog
/ll 1 def systemdict /languagelevel known {
/ll languagelevel def } if
%%BeginResource: PostScript::Simple
/ux {} def
/uy {} def
/u {} def
/box {
  newpath 3 copy pop exch 4 copy pop pop
  8 copy pop pop pop pop exch pop exch
  3 copy pop pop exch moveto lineto
  lineto lineto pop pop pop pop closepath
} bind def
%%EndResource
%%EndProlog
5 u setlinewidth
10 ux 10 uy 90 ux 90 uy box stroke
0.4 setlinewidth
newpath
0 ux 50 uy moveto
100 ux 50 uy lineto stroke
newpath
50 ux 0 uy moveto
50 ux 100 uy lineto stroke
newpath
0 ux 40 uy moveto
0 ux 60 uy lineto stroke
newpath
100 ux 40 uy moveto
100 ux 60 uy lineto stroke
newpath
40 ux 0 uy moveto
60 ux 0 uy lineto stroke
newpath
40 ux 100 uy moveto
60 ux 100 uy lineto stroke
%%EOF
EndEPSF
%%EOF
EndEPSF
/Courier findfont 10 scalefont setfont
newpath
100 ux 75 uy moveto
($directeps->reset\(\);)   show stroke 
newpath
100 ux 70 uy moveto
($directeps->translate\(50, 50\);)   show stroke 
newpath
100 ux 65 uy moveto
($directeps->rotate\(20\);)   show stroke 
newpath
100 ux 60 uy moveto
($directeps->translate\(-50, -50\);)   show stroke 
newpath
100 ux 55 uy moveto
(# round-about way to set clipping path)   show stroke 
newpath
100 ux 50 uy moveto
($eps = new PostScript::Simple\(eps => 1,)   show stroke 
newpath
110 ux 45 uy moveto
(xsize => 100, ysize => 100\);)   show stroke 
newpath
100 ux 40 uy moveto
($eps->importeps\($directeps, 0, 0\);)   show stroke 
newpath
100 ux 35 uy moveto
($directeps = $eps->geteps\(\);)   show stroke 
newpath
100 ux 30 uy moveto
($directeps->scale\(60/100\);)   show stroke 
newpath
100 ux 25 uy moveto
($ps->importeps\($directeps, 30, 30\);)   show stroke 
%%PageTrailer
pagelevel restore
showpage
%%EOF
